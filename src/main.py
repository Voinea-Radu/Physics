from cmath import e, pi

import numpy as np
from matplotlib import pyplot as plt
from numpy.ma.core import append
from prettytable import PrettyTable
from unum import Unum
from unum.units import s, min, A, T, eV

from utils import append_to_file
from utils import delete_file
from utils import write_to_csv

data_raw_poisson = [1, 3, 2, 2, 3, 4, 4, 1, 3, 3, 1, 4, 2, 4, 1, 1, 3, 5, 1, 5, 1, 4, 5, 1, 4, 5, 4, 2, 4, 2, 2, 3, 8, 4, 1, 3, 3, 3, 2, 5, 1, 3, 3, 2, 3, 0, 2,
                    2, 2, 4, 3, 3, 4, 0, 2, 3, 2, 6, 5, 3, 1, 1, 3, 5, 2, 0, 1, 2, 4, 0, 3, 2, 2, 4, 1, 2, 2, 6, 1, 1, 3, 1, 2, 4, 2, 2, 3, 3, 3, 4, 4, 1, 3, 5,
                    2, 2, 0, 2, 4, 2, 5, 7, 2, 4, 4, 4, 5, 2, 8, 3, 5, 5, 1, 3, 3, 3, 1, 5, 4, 4, 4, 5, 6, 3, 2, 6, 3, 3, 0, 1, 0, 3, 1, 2, 7, 3, 2, 5, 8, 11,
                    3, 6, 3, 2, 4, 2, 3, 4, 2, 3, 1, 2, 3, 2, 1, 3, 3, 2, 1, 5, 4, 1, 1, 2, 3, 2, 5, 3, 3, 2, 1, 2, 1, 5, 3, 4, 1, 2, 2, 4, 2, 3, 2, 4, 0, 1, 3,
                    3, 2, 3, 2, 3, 7, 2, 3, 7, 6, 4, 6, 5, 1, 6, 2, 2, 4, 5, 3, 1, 4, 3, 3, 1, 4, 5, 3, 1, 4, 4, 2, 6, 0, 2, 3, 7, 4, 1, 3, 1, 5, 1, 1, 1, 3, 3,
                    2, 5, 3, 3, 4, 5, 1, 4, 3, 4, 2, 3, 4, 0, 8, 4, 2, 4, 1, 0, 2, 4, 4, 3, 3, 1, 1, 3, 1, 1, 6, 3, 3, 4, 5, 5, 4, 2, 2, 1, 1, 4, 3, 1, 4, 3, 3,
                    3, 3, 3, 5, 3, 3, 5, 2, 4, 5, 2, 3, 2, 6, 2, 2, 1, 4, 4, 6, 3, 5, 5, 3, 1, 4, 5, 0, 3, 2, 2, 5, 1, 1, 4, 1, 4, 1, 4, 5, 1, 9, 4, 5, 8, 2, 3,
                    2, 2, 4, 2, 2, 5, 2, 2, 1, 3, 7, 2, 4, 2, 3, 3, 4, 7, 2, 2, 3, 4, 4, 1, 2, 4, 4, 0, 1, 2, 2, 5, 2, 4, 5, 6, 4, 0, 0, 2, 5, 3, 4, 2, 2, 2, 2,
                    0, 6, 5, 2, 6, 4, 3, 0, 3, 4, 2, 5, 4, 6, 2, 0, 1, 7, 4, 6, 3, 3, 7, 4, 0, 7, 6, 2, 0, 5, 5, 1, 4, 0, 2, 1, 0, 2, 2, 1, 4, 3, 0, 4, 9, 4, 4,
                    5, 3, 4, 7, 5, 2, 2, 2, 3, 2, 4, 4, 4, 3, 2, 3, 4, 4, 4, 3, 1, 2, 5, 1, 3, 4, 6, 1, 3, 0, 1, 5, 6, 2, 4, 4, 2, 3, 4, 7, 3, 5, 4, 4, 1, 2, 3,
                    3, 1, 9, 4, 2, 4, 7, 4, 3, 4, 4, 8, 1, 1, 2, 4, 2, 4, 2, 3, 4, 4, 2, 3, 4, 2, 1, 1, 3, 1, 2, 5, 4, 2, 4, 4, 3, 2, 2, 3, 2, 1, 4, 2, 2, 3, 3,
                    3, 8, 8, 2, 3, 3, 4, 5, 3, 2, 6, 4, 3, 7, 4, 2, 4, 2, 4, 10, 2, 4, 2, 3, 2, 1, 3, 2, 1, 5, 5, 7, 1, 2, 2, 3, 4, 2, 3, 3, 3, 3, 4, 1, 4, 1,
                    2,
                    4, 0, 5, 4, 2, 3, 2, 3, 1, 5, 2, 2, 2, 5, 4, 2, 7, 2, 3, 4, 0, 0, 6, 8, 0, 7, 3, 8, 1, 1, 3, 5, 3, 2, 7, 4, 7, 4, 1, 7, 1, 5, 7, 8, 3, 3, 0,
                    3, 3, 3, 1, 1, 4, 2, 2, 2, 2, 4, 3, 6, 6, 5, 2, 4, 2, 3, 6, 2, 2, 0, 1, 1, 8, 2, 4, 6, 3, 3, 6, 1, 2, 1, 5, 2, 4, 3, 0, 1, 3, 3, 1, 4, 3, 1,
                    2, 0, 8, 4, 3, 3, 3, 3, 2, 3, 3, 5, 3, 1, 2, 1, 4, 2, 2, 1, 1, 1, 1, 2, 4, 4, 0, 1, 3, 6, 4, 3, 5, 4, 4, 4, 2, 3, 2, 1, 2, 4, 3, 1, 2, 2, 2,
                    7, 2, 0, 2, 1, 6, 2, 2, 5, 2, 3, 9, 5, 0, 4, 3, 4, 0, 3, 3, 4, 2, 1, 1, 3, 4, 5, 4, 2, 3, 2, 3, 3, 4, 2, 2, 4, 3, 5, 2, 3, 1, 2, 5, 3, 3, 4,
                    6, 1, 3, 4, 5, 4, 6, 8, 5, 5, 5, 5, 2, 2, 3, 3, 2, 7, 5, 3, 1, 2, 1, 2, 3, 2, 0, 3, 0, 3, 2, 6, 4, 3, 3, 5, 3, 1, 0, 3, 1, 1, 4, 4, 0, 3, 1,
                    1, 3, 3, 5, 1, 2, 1, 2, 3, 3, 1, 1, 5, 5, 3, 4, 5, 3, 2, 4, 5, 3, 0, 5, 3, 6, 3, 2, 2, 2, 6, 4, 4, 2, 1, 2, 1, 4, 2, 5, 3, 4, 5, 2, 6, 1, 2,
                    3, 4, 5, 5, 8, 1, 5, 3, 2, 3, 6, 3, 4, 6, 2, 2, 3, 2, 3, 3, 4, 3, 1, 2, 2, 5, 5, 2, 3, 4, 4, 2, 3, 2, 2, 0, 3, 2, 3, 3, 5, 3, 2, 6, 5, 5, 3,
                    6, 2, 4, 5, 5, 1, 2, 2, 4, 3, 1, 4, 4, 3, 3, 2, 2, 7, 3, 3, 1, 1, 0, 2, 2, 2, 5, 4, 5, 2, 4, 5, 2, 5, 2, 4, 4, 2, 2, 0, 4, 2, 6, 6, 1, 3, 8,
                    3, 2, 1, 3, 1, 2, 2, 3, 6, 5, 4, 2, 1, 1, 8, 8, 3, 2, 1, 2, 6, 6, 2, 1, 2, 6, 0, 3, 5, 0, 3, 6, 3, 2, 3, 3, 2, 2, 4, 3, 2, 1, 2, 4, 1, 4, 1,
                    4, 3, 1, 2, 1, 1, 1, 1, 6, 2, 1, 3, 5, 3, 2, 3, 1, 6, 3, 6, 3, 2, 4, 3, 7, 0, 1, 1, 2, 1, 2, 5, 2, 2, 2, 9, 5, 1, 4, 3, 3, 4, 0, 5, 3, 1]

data_raw_gauss = [707, 747, 720, 764, 725, 766, 733, 731, 703, 733, 689, 762, 792, 719, 726, 727, 705, 753, 745, 745, 717, 770, 671, 747, 730, 755, 770, 735,
                  718, 747, 726, 697, 725, 729, 719, 739, 741, 760, 772, 718, 749, 795, 716, 745, 724, 718, 738, 736, 800, 773, 708, 809, 742, 721, 735, 783,
                  740, 741, 699, 800, 776, 733, 735, 746, 767, 797, 703, 747, 719, 747, 732, 697, 738, 726, 768, 714, 755, 753, 750, 716, 736, 756, 717, 769,
                  725, 774, 716, 768, 707, 711, 748, 764, 746, 749, 731, 747, 782, 735, 708, 720, 713, 763, 719, 706, 740, 736, 691, 718, 743, 750, 737, 710,
                  757, 797, 780, 726, 764, 705, 747, 732, 780, 740, 714, 702, 754, 739, 678, 766, 776, 743, 737, 693, 770, 683, 777, 727, 709, 709, 752, 713,
                  747, 730, 706, 713, 791, 732, 712, 780, 741, 695, 749, 750, 744, 717, 769, 720, 713, 772, 716, 721, 723, 684, 723, 742, 733, 741, 685, 754,
                  726, 716, 740, 771, 709, 734, 777, 711, 723, 726, 744, 714, 751, 786, 727, 749, 708, 722, 741, 761, 774, 743, 738, 772, 743, 774, 756, 727,
                  776, 736, 781, 722, 744, 712, 692, 755, 709, 711, 777, 675, 756, 746, 699, 770, 760, 703, 711, 742, 741, 710, 691, 721, 740, 796, 714, 729,
                  750, 721, 702, 774, 730, 720, 725, 737, 770, 738, 787, 762, 710, 748, 697, 733, 699, 760, 744, 744, 788, 742, 710, 752, 755, 691, 690, 735,
                  727, 721, 739, 724, 718, 733, 733, 717, 773, 758, 751, 755, 725, 688, 738, 782, 731, 698, 739, 757, 719, 741, 786, 709, 707, 672, 728, 763,
                  730, 736, 701, 769, 654, 714, 747, 775, 775, 706, 690, 751, 754, 695, 695, 758, 669, 719, 760, 686, 769, 714, 707, 752, 780, 726, 704, 707,
                  786, 675, 757, 716, 715, 761, 733, 741, 692, 692, 695, 734, 735, 704, 757, 779, 699, 725, 746, 772, 712, 706, 733, 815, 767, 707, 701, 710,
                  682, 757, 708, 739, 725, 701, 715, 724, 698, 703, 703, 760, 751, 706, 717, 718, 729, 685, 712, 762, 730, 792, 725, 715, 736, 720, 734, 718,
                  723, 684, 729, 718, 712, 696, 703, 734, 732, 732, 714, 715, 748, 728, 726, 773, 742, 788, 747, 723, 713, 702, 702, 700, 746, 711, 729, 737,
                  720, 741, 701, 745, 756, 725, 719, 770, 733, 777, 778, 734, 733, 749, 760, 762, 687, 723, 723, 725, 702, 778, 764, 738, 757, 729, 769, 725,
                  721, 673, 743, 734, 755, 755, 750, 768, 794, 728, 724, 750, 709, 707, 716, 718, 678, 732, 718, 741, 730, 801, 706, 746, 752, 749, 778, 765,
                  703, 778, 724, 733, 754, 700, 755, 779, 730, 680, 703, 751, 722, 712, 735, 741, 708, 756, 713, 699, 699, 726, 718, 784, 759, 721, 759, 747,
                  709, 742, 690, 727, 758, 713, 728, 741, 720, 711, 748, 715, 715, 761, 708, 748, 758, 707, 738, 719, 721, 725, 704, 734, 703, 727, 712, 716,
                  756, 743, 744, 770, 787, 704, 733, 732, 753, 728, 762, 733, 783, 683, 687, 749, 714, 777, 721, 732, 722, 761, 757, 709, 715, 712, 675, 702,
                  710, 706, 720, 745, 732, 710, 760, 723, 749, 687, 749, 742, 715, 716, 739, 729, 729, 734, 779, 702, 751, 710, 725, 723, 699, 746, 753, 667,
                  757, 733, 709, 736, 734, 782, 746, 696, 743, 712, 747, 749, 731, 757, 757, 722, 713, 730, 675, 727, 722, 723, 732, 757, 741, 766, 722, 709,
                  732, 700, 750, 730, 725, 725, 712, 728, 753, 731, 707, 714, 731, 719, 704, 759, 736, 708, 690, 699, 716, 736, 747, 728, 719, 676, 718, 718,
                  719, 738, 769, 746, 696, 732, 759, 701, 767, 707, 746, 711, 743, 729, 743, 732, 764, 784, 747, 723, 741, 717, 703, 771, 727, 768, 712, 780,
                  771, 747, 688, 723, 720, 745, 676, 733, 732, 744, 727, 747, 753, 715, 749, 680, 745, 708, 712, 729, 698, 721, 747, 769, 736, 712, 761, 739,
                  682, 802, 802, 802, 717, 676, 676, 676, 729, 729, 743, 755, 731, 735, 735, 688, 756, 743, 693, 739, 737, 735, 723, 771, 717, 780, 701, 739,
                  731, 735, 729, 729, 729, 756, 707, 707, 753, 743, 720, 699, 699, 716, 755, 721, 657, 675, 758, 712, 768, 768, 768, 694, 717, 720, 723, 678,
                  731, 731, 692, 692, 723, 728, 728, 762, 708, 782, 728, 728, 728, 728, 689, 689, 689, 689, 751, 751, 751, 708, 748, 748, 757, 689, 714, 714,
                  735, 765, 765, 765, 710, 710, 710, 710, 710, 710, 755, 687, 688, 691, 768, 756, 756, 686, 751, 686, 719, 724, 737, 741, 765, 706, 745, 729,
                  732, 764, 764, 716, 720, 720, 744, 744, 688, 743, 722, 703, 716, 690, 690, 705, 743, 743, 743, 743, 747, 718, 702, 700, 736, 704, 764, 706,
                  706, 743, 748, 736, 736, 736, 717, 696, 765, 805, 663, 663, 756, 707, 709, 708, 774, 774, 692, 690, 750, 684, 731, 761, 761, 719, 721, 694,
                  730, 760, 722, 715, 769, 767, 707, 716, 732, 743, 691, 702, 711, 729, 710, 743, 747, 670, 723, 700, 741, 766, 769, 709, 783, 718, 755, 728,
                  761, 746, 717, 726, 734, 742, 769, 741, 706, 722, 704, 718, 733, 708, 682, 746, 729, 734, 730, 723, 695, 736, 699, 750, 717, 715, 741, 756,
                  749, 704, 694, 749, 699, 741, 721, 719, 769, 726, 695, 697, 760, 760, 713, 778, 748, 693, 763, 728, 745, 789, 746, 747, 721, 692, 679, 727,
                  719, 720, 707, 776, 737, 705, 753, 734, 753, 735, 736, 680, 681, 708, 717, 726, 752, 688, 690, 729, 700, 757, 740, 706, 706, 757, 707, 751,
                  685, 714, 710, 735, 761, 703, 711, 717, 715, 701, 675, 695, 730, 709, 726, 695, 687, 747, 688, 724, 724, 725, 739, 707, 708, 713, 717, 717,
                  696, 709, 755, 711, 688, 749, 684, 705, 753, 709, 683, 728, 747, 719, 769, 757, 674, 742, 733, 699, 735, 723, 730, 724, 756, 722, 742, 754,
                  697, 711, 787, 703, 668, 685, 710, 698, 710, 705, 710, 687, 744, 754, 750, 744, 743, 744, 757, 708, 675, 744, 711, 701, 676, 700, 699, 758,
                  710, 726, 691, 725, 718, 750, 721, 740, 737, 725, 653, 700, 767, 706, 747, 709, 800, 736, 708, 698, 679, 732, 743, 739, 715, 684, 714, 761,
                  732, 748, 750, 720, 765, 721, 735, 723, 716, 686, 742, 661, 711, 736, 688, 718, 711, 733, 744, 750, 731, 706, 729, 726, 716, 690, 743, 709,
                  714, 721, 738, 715, 691, 737, 706, 747, 706, 733, 774, 775, 775, 776, 743, 692, 731, 709, 749, 729, 729, 675, 731, 720, 735, 707, 728, 688,
                  695, 749, 718, 756, 761, 730, 763, 687, 715, 713, 734, 712, 777, 738, 709, 723, 691, 740, 777, 721, 687, 716, 718, 722, 722, 684, 735, 697,
                  719, 812, 726, 730, 742, 696, 767, 739, 706, 746, 691, 749, 778, 728, 712, 764, 713, 721, 770, 714, 742, 713, 716, 705, 712, 774, 725, 756,
                  754, 712, 739, 691, 723, 722, 772, 757, 700, 749, 744, 758, 721, 691, 733, 695, 717, 712, 733, 747, 732, 732, 698, 721, 681, 688, 732, 747,
                  716, 692, 701, 736, 706, 711, 727, 700, 746, 735, 730, 753, 684, 714, 754, 694, 748, 762, 668, 668, 696, 716, 724, 702, 724, 720, 676, 744,
                  777, 777, 777, 717, 750, 719, 684, 733, 693, 752, 697, 754, 749, 732, 725, 730, 725, 723, 731, 715, 703, 725, 698, 749, 687, 786, 746, 742,
                  750, 697, 706, 723, 723, 723, 746, 799, 702, 671, 706, 696, 729, 718, 743, 748, 698, 734, 688, 738, 694, 742, 679, 751, 762, 739, 748, 743,
                  736, 762, 730, 684, 697, 717, 727, 704, 751, 748, 732, 679, 713, 711, 745, 752, 752, 729, 736, 736, 698, 739, 728, 757, 690, 732, 753, 738,
                  716, 741, 708, 683, 757, 719, 759, 690, 704, 689, 780, 722, 751, 714, 734, 728, 742, 709, 731, 707, 685, 721, 718, 701, 715, 719, 746, 740,
                  761, 696, 741, 740, 747, 701, 750, 769, 735, 717, 730, 715, 730, 752, 730, 730, 693, 763, 701, 696, 751, 744, 681, 701, 697, 743, 755, 759,
                  745, 708, 731, 657, 725, 738, 698, 700, 731, 732, 741, 711, 738, 749, 732, 675, 719, 700, 691, 730, 729, 764, 737, 763, 750, 695, 697, 713,
                  748, 718, 720, 721, 756, 737, 715, 768, 726, 696, 705, 723, 744, 707, 685, 715, 696, 733, 742, 730, 717, 689, 707, 747, 740, 732, 742, 782,
                  736, 747, 722, 711, 725, 713, 719, 748, 739, 733, 776, 721, 740, 703, 699, 763, 742, 711, 702, 711, 727, 722, 697, 682, 715, 734, 700, 766,
                  751, 736, 732, 719, 738, 797, 753, 742, 715, 719, 705, 748, 748, 734, 715, 725, 745, 670, 752, 760, 755, 763, 755, 726, 729, 732, 700, 721,
                  745, 721, 731, 724, 740, 676, 709, 698, 759, 753, 729, 711, 733, 708, 696, 767, 740, 689, 768, 685, 758, 726, 694, 711, 726, 674, 705, 701,
                  773, 712, 693, 727, 726, 738, 709, 696, 714, 709, 714, 682, 696, 731, 746, 692, 724, 699, 725, 688, 723, 757, 721, 743, 741, 688, 750, 711,
                  732, 729, 726, 735, 679, 755, 729, 737, 703, 721, 746, 682, 725, 699, 737, 730, 729, 748, 733, 712, 734, 721, 747, 745, 705, 789, 700, 709,
                  713, 675, 734, 700, 703, 714, 735, 720, 770, 725, 716, 716, 721, 729, 765, 699, 680, 767, 712, 734, 733, 704, 705, 714, 673, 679, 722, 718,
                  725, 721, 739, 725, 688, 753, 749, 775, 737, 734, 732, 737, 760, 709, 737, 691, 707, 752, 717, 702, 739, 761, 731, 726, 682, 739, 751, 716,
                  716, 699, 739, 730, 702, 712, 696, 762, 702, 718, 682, 675, 718, 702, 738, 705, 734, 746, 732, 729, 747, 708, 746, 710, 751, 683, 779, 715,
                  730, 747, 738, 736, 713, 718, 777, 748, 683, 704, 730, 719, 682, 714, 689, 723, 735, 754, 739, 720, 697, 727, 713, 791, 689, 695, 713, 689,
                  762, 695, 718, 754, 676, 666, 728, 697, 728, 657, 745, 741, 718, 732, 725, 671, 750, 741, 760, 755, 736, 706, 717, 711, 743, 700, 758, 711,
                  730, 738, 729, 762, 626, 751, 731, 760, 756, 681, 701, 768, 719, 772, 756, 690, 757, 733, 710, 697, 737, 698, 713, 750, 825, 752, 697, 724,
                  711, 766, 693, 682, 779, 757, 760, 752, 726, 742, 753, 722, 735, 700, 731, 762, 743, 733, 753, 723, 713, 716, 712, 737, 793, 704, 721, 690,
                  747, 731, 724, 740, 733, 735, 751, 721, 756, 723, 705, 748, 741, 701, 747, 766, 724, 713, 698, 718, 741, 740, 721, 732, 744, 710, 691, 727,
                  733, 731, 718, 730, 747, 771, 733, 725, 769, 678, 723, 709, 724, 715, 742, 777, 740, 660, 750, 746, 713, 741, 741, 655, 767, 702, 726, 741,
                  699, 742, 776, 708, 685, 748, 765, 759, 717, 717, 730, 669, 769, 738, 687, 683, 735, 732, 767, 755, 755, 740, 729, 788, 751, 719, 717, 760,
                  725, 762, 721, 771, 714, 804, 763, 742, 695, 763, 717, 738, 781, 744, 794, 731, 703, 711, 692, 741, 715, 702, 715, 733, 709, 760, 712, 697,
                  803, 753, 709, 719, 696, 706, 724, 711, 729, 766, 766, 755, 763, 691, 720, 739, 720, 712, 777, 753, 735, 723, 779, 725, 736, 689, 750, 683,
                  698, 705, 703, 713, 744, 727, 715, 701, 740, 732, 786, 707, 714, 733, 734, 748, 739, 775, 740, 685, 675, 697, 780, 680, 728, 767, 721, 707,
                  701, 715, 687, 673, 774, 726, 754, 714, 706, 762, 729, 708, 777, 667, 710, 705, 709, 721, 664, 728, 739, 699, 692, 765, 716, 701, 696, 706,
                  708, 761, 735, 718, 765, 698, 724, 734, 730, 719, 690, 753, 738, 721, 739, 700, 731, 727, 733, 733, 734, 683, 753, 679, 695, 738, 737, 713,
                  722, 717, 742, 695, 688, 714, 718, 741, 693, 743, 717, 732, 779, 705, 724, 724, 718, 671, 710, 689, 733, 754, 779, 699, 742, 719, 769, 813,
                  704, 710, 734, 722, 681, 737, 695, 734, 674, 666, 717, 713, 750, 705, 719, 665, 723, 694, 724, 787, 715, 736, 683, 717, 698, 733, 745, 779,
                  773, 722, 730, 754, 685, 703, 737, 699, 762, 741, 673, 700, 702, 729, 712, 713, 740, 751, 741, 673, 708, 718, 771, 722, 701, 712, 716, 743,
                  705, 772, 757, 718, 692, 681, 712, 703, 726, 729, 747, 743, 720, 756, 762, 752, 718, 777, 750, 719, 744, 719, 733, 759, 720, 743, 702, 704,
                  720, 737, 702, 706, 768, 746, 739, 728, 695, 747, 673, 732, 723, 709, 725]


class Data:
    n: int
    k_exp: int
    nk_exp: int
    P: int
    k_th_P: int
    P_G: int
    k_th_G: int

    def __init__(self, n: int, k_exp: int):
        self.n = n
        self.k_exp = k_exp
        self.nk_exp = n * k_exp
        self.P = 0
        self.k_th_P = 0
        self.P_G = 0
        self.k_th_G = 0


def plot_poly(x, y, color):
    z = np.polyfit(x, y, 10)
    p = np.poly1d(z)
    # plt.scatter(x, y)
    plt.plot(x, p(x), f"{color}--")


def process_data(raw_data):
    distribution = {}
    data: list[Data] = []
    table = PrettyTable()

    for d in raw_data:
        if d in distribution:
            distribution[d] += 1
        else:
            distribution[d] = 1

    for d in distribution:
        data.append(Data(d, distribution[d]))

    data.sort(key=lambda x: x.n)
    table.field_names = ["n", "k_exp", "nk_exp", "P", "k_th_P", "P_G", "k_th_G"]

    N = sum([d.k_exp for d in data])
    sigma = sum([d.nk_exp for d in data])
    a = sigma / N
    print(f"{N=}")
    print(f"{sigma=}")
    print(f"{a=}")

    data[0].P = e ** -a
    for index, d in enumerate(data[1:], start=1):
        d.P = data[index - 1].P * a / index

    for d in data:
        d.k_th_P = d.P * N

    for d in data:
        term1 = 1 / ((2 * pi * a) ** (1 / 2))
        term2 = - ((d.n - a) ** 2) / (2 * a)
        d.P_G = term1 * e ** term2
        d.k_th_G = d.P_G * N

    sum_pg = sum([d.P_G for d in data])
    print(f"{sum_pg=}")

    for d in data:
        table.add_row([d.n, d.k_exp, d.nk_exp, f"{d.P}", d.k_th_P, f"{d.P_G}", d.k_th_G])

    plt.bar([elem.n for elem in data], [elem.k_exp for elem in data], width=1)

    plot_poly([elem.n for elem in data], [elem.k_th_P for elem in data], "r")
    plot_poly([elem.n for elem in data], [elem.k_th_G for elem in data], "b")
    plt.legend(["Theoretical Poisson", "Theoretical Gauss"])

    plt.show()

    write_to_csv("results.txt", table)


def main():
    process_data(data_raw_poisson)
    process_data(data_raw_gauss)


#
# gauss_distribution = {}
#
# for data in data_gauss:
#     if data/50 in gauss_distribution:
#         gauss_distribution[data/50] +=1*50
#     else:
#         gauss_distribution[data/50] =1*50
#
# gauss_sum = sum(gauss_distribution.values())
#
# for key in gauss_distribution.keys():
#     gauss_distribution[key] /= gauss_sum/25


# interpolate between the values
# tmp = []
# for key, value in gauss_distribution.items():
#     tmp.append((key, value))
#
# sorted_gauss = sorted(tmp, key=lambda x: x[0])
#
# x = [elem[0] for elem in sorted_gauss]
# y = [elem[1] for elem in sorted_gauss]
#
# z = np.polyfit(x, y, 10)
# p = np.poly1d(z)
# plt.scatter(x, y)
# plt.plot(x, p(x), "r--")
# plt.bar(poisson_distribution.keys(), poisson_distribution.values(), width=1)
# plt.show()

# plt.bar(gauss_distribution.keys(), gauss_distribution.values(), width=1)
# plt.show()

# N = sum([d.k_exp for d in data])
# sigma = sum([d.nk_exp for d in data])
# a = N / sigma
# n_med = sum(range(1, len(data))) / len(data)
#
# data[0].P = e / N
# for index, d in enumerate(data[1:]):
#     d.P = data[index].P * a / (index + 1)
#
# for d in data:
#     d.k_th_P = d.P * d.k_exp
#
# for index, d in enumerate(data):
#     d.P_G = 1 / ((2 * pi) ** (1 / 2) * N / n_med) * e ** (-(index - n_med) ** 2 / (2 * n_med))
#     d.k_th_G = d.P_G * d.k_exp
#
# table = PrettyTable()
# table.field_names = ["n", "k_exp", "nk_exp", "P", "k_th_P", "P_G", "k_th_G"]
# for d in data:
#     table.add_row([d.n, d.k_exp, d.nk_exp, d.P, d.k_th_P, d.P_G, d.k_th_G])
#
# write_to_csv("results.txt", table)


if __name__ == "__main__":
    delete_file("results.txt")
    main()
